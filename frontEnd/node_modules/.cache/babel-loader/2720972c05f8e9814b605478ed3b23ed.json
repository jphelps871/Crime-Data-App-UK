{"ast":null,"code":"var _jsxFileName = \"/Users/jamesphelps/Documents/React/crime data app/find-crime/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"./nav\";\nimport Login from \"./login\";\nimport DisplayCrimeData from \"./displayData\";\nimport CityName from \"./cityName\";\nimport Options from \"./options\";\nimport Spinner from \"./loading.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Home() {\n  _s();\n\n  // const MAP_BOX_API =\n  //   \"pk.eyJ1IjoiMnBoZWxqNTYiLCJhIjoiY2trc2NyaGExMGMxeDJ3cGw3NjBqNng1NyJ9.ZJp17pLpWHvxtYSVLxARNg\";\n  // States\n  const [userInputLocation, setInputLocation] = useState({\n    street: \"\",\n    city: \"\"\n  });\n  const [userDefinedYear, setUserDefinedYear] = useState(\"2021\");\n  const [sendUserInputLocation, setSendUserInputLocation] = useState({\n    location: \"\",\n    year: \"\"\n  });\n  const [crimeData, setCrimeData] = useState([]);\n  const [streetNameFromData, setStreetNameFromData] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getAllData();\n  }, [sendUserInputLocation]);\n\n  const getAllData = async () => {\n    // Stop getAllData from running if nothing is in the search input\n    if (sendUserInputLocation.location === \"\") return;\n    console.log(sendUserInputLocation.location);\n\n    try {\n      // fetch location from user input\n      const locationResponse = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${sendUserInputLocation.location}.json?limit=1&country=GB&access_token=${process.env.REACT_APP_MAP_BOX_API}`);\n      const locationData = await locationResponse.json();\n      const location = locationData.features[0].center; // fetch crime data, from latitude and longitude of MapBox API\n\n      const allCrimeData = [];\n\n      for (let i = 1; i < 12; i++) {\n        const crimeResponse = await fetch(`https://data.police.uk/api/crimes-at-location?date=${sendUserInputLocation.year}-${i}&lat=${location[1]}&lng=${location[0]}`); // get crime data\n\n        const crimeData = await crimeResponse.json();\n        crimeData.forEach(obj => {\n          allCrimeData.push(obj);\n        });\n        setLoading(true);\n      }\n\n      setStreetNameFromData(allCrimeData[0].location.street.name); // reduce json into objects and their quantities (how many times they appear)\n\n      const crimeQuantity = allCrimeData.reduce((allCrimes, crime) => {\n        if (crime.category in allCrimes) {\n          allCrimes[crime.category]++;\n        } else {\n          allCrimes[crime.category] = 1;\n        }\n\n        return allCrimes;\n      }, {}); // return an array from object\n\n      setCrimeData(Object.entries(crimeQuantity));\n      setLoading(false);\n    } catch (e) {\n      setStreetNameFromData(\"Sorry, there is no information on this location\"); // return crimeData to nothing\n\n      setCrimeData([]);\n    }\n  };\n\n  function streetAndCityInput(e) {\n    // send data to string state\n    setInputLocation({ ...userInputLocation,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    let userStreetInput = e.target.children[0];\n    let userCityInput = e.target.children[1];\n\n    if (userStreetInput.value && userCityInput.value !== \"\") {\n      // on submit, remove previous displayed crimes\n      setCrimeData([]);\n      setStreetNameFromData(\"\"); // user inupt values for location need to be in one string, for mapBox to find lat and long\n\n      const locationAsString = Object.values(userInputLocation).join(\" \");\n      setSendUserInputLocation({ ...userInputLocation,\n        location: locationAsString,\n        year: userDefinedYear\n      }); // reset input\n      // userStreetInput.value = \"\";\n      // userCityInput.value = \"\";\n\n      userStreetInput.style.borderColor = \"inherit\";\n      userCityInput.style.borderColor = \"inherit\";\n    } else {\n      userStreetInput.style.borderColor = \"red\";\n      userCityInput.style.borderColor = \"red\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The crime data app to help you feel safe.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Street Name\",\n          name: \"street\",\n          onChange: streetAndCityInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"City / Town\",\n          name: \"city\",\n          onChange: streetAndCityInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Options, {\n          onChange: value => setUserDefinedYear(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Find Crime Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-info\",\n        children: \"Search by town, city or simply click the location icon to get information on crime in your area. Data is collected from \\u2018data.police.uk\\u2019.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityName, {\n      name: streetNameFromData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crime-data-container\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 20\n      }, this) : \"\", crimeData.map(data => /*#__PURE__*/_jsxDEV(DisplayCrimeData, {\n        crimeType: data[0],\n        crimeNumber: data[1]\n      }, data[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"9APWrt4Z1wmFPjkc6zyMCOec+SA=\");\n\n_c2 = Home;\nexport default App; // authors\n// <div>Icons made by <a href=\"http://fontawesome.io\" title=\"Dave Gandy\">Dave Gandy</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/jamesphelps/Documents/React/crime data app/find-crime/src/App.js"],"names":["React","useEffect","useState","Nav","Login","DisplayCrimeData","CityName","Options","Spinner","BrowserRouter","Router","Switch","Route","require","config","App","Home","userInputLocation","setInputLocation","street","city","userDefinedYear","setUserDefinedYear","sendUserInputLocation","setSendUserInputLocation","location","year","crimeData","setCrimeData","streetNameFromData","setStreetNameFromData","loading","setLoading","getAllData","console","log","locationResponse","fetch","process","env","REACT_APP_MAP_BOX_API","locationData","json","features","center","allCrimeData","i","crimeResponse","forEach","obj","push","name","crimeQuantity","reduce","allCrimes","crime","category","Object","entries","e","streetAndCityInput","target","value","submitForm","preventDefault","userStreetInput","children","userCityInput","locationAsString","values","join","style","borderColor","map","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEZ;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQW,G;;AAcT,SAASC,IAAT,GAAgB;AAAA;;AACd;AACA;AAEA;AACA,QAAM,CAACC,iBAAD,EAAoBC,gBAApB,IAAwChB,QAAQ,CAAC;AACrDiB,IAAAA,MAAM,EAAE,EAD6C;AAErDC,IAAAA,IAAI,EAAE;AAF+C,GAAD,CAAtD;AAIA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,MAAD,CAAtD;AACA,QAAM,CAACqB,qBAAD,EAAwBC,wBAAxB,IAAoDtB,QAAQ,CAAC;AACjEuB,IAAAA,QAAQ,EAAE,EADuD;AAEjEC,IAAAA,IAAI,EAAE;AAF2D,GAAD,CAAlE;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC2B,kBAAD,EAAqBC,qBAArB,IAA8C5B,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAAC6B,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACV,qBAAD,CAFM,CAAT;;AAIA,QAAMU,UAAU,GAAG,YAAY;AAC7B;AACA,QAAIV,qBAAqB,CAACE,QAAtB,KAAmC,EAAvC,EAA2C;AAC3CS,IAAAA,OAAO,CAACC,GAAR,CAAYZ,qBAAqB,CAACE,QAAlC;;AAEA,QAAI;AACF;AACA,YAAMW,gBAAgB,GAAG,MAAMC,KAAK,CACjC,qDAAoDd,qBAAqB,CAACE,QAAS,yCAAwCa,OAAO,CAACC,GAAR,CAAYC,qBAAsB,EAD5H,CAApC;AAGA,YAAMC,YAAY,GAAG,MAAML,gBAAgB,CAACM,IAAjB,EAA3B;AACA,YAAMjB,QAAQ,GAAGgB,YAAY,CAACE,QAAb,CAAsB,CAAtB,EAAyBC,MAA1C,CANE,CAQF;;AACA,YAAMC,YAAY,GAAG,EAArB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAMC,aAAa,GAAG,MAAMV,KAAK,CAC9B,sDAAqDd,qBAAqB,CAACG,IAAK,IAAGoB,CAAE,QAAOrB,QAAQ,CAAC,CAAD,CAAI,QAAOA,QAAQ,CAAC,CAAD,CAAI,EAD7F,CAAjC,CAD2B,CAI3B;;AACA,cAAME,SAAS,GAAG,MAAMoB,aAAa,CAACL,IAAd,EAAxB;AACAf,QAAAA,SAAS,CAACqB,OAAV,CAAmBC,GAAD,IAAS;AACzBJ,UAAAA,YAAY,CAACK,IAAb,CAAkBD,GAAlB;AACD,SAFD;AAGAjB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAEDF,MAAAA,qBAAqB,CAACe,YAAY,CAAC,CAAD,CAAZ,CAAgBpB,QAAhB,CAAyBN,MAAzB,CAAgCgC,IAAjC,CAArB,CAtBE,CAwBF;;AACA,YAAMC,aAAa,GAAGP,YAAY,CAACQ,MAAb,CAAoB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC9D,YAAIA,KAAK,CAACC,QAAN,IAAkBF,SAAtB,EAAiC;AAC/BA,UAAAA,SAAS,CAACC,KAAK,CAACC,QAAP,CAAT;AACD,SAFD,MAEO;AACLF,UAAAA,SAAS,CAACC,KAAK,CAACC,QAAP,CAAT,GAA4B,CAA5B;AACD;;AACD,eAAOF,SAAP;AACD,OAPqB,EAOnB,EAPmB,CAAtB,CAzBE,CAkCF;;AACA1B,MAAAA,YAAY,CAAC6B,MAAM,CAACC,OAAP,CAAeN,aAAf,CAAD,CAAZ;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KArCD,CAqCE,OAAO2B,CAAP,EAAU;AACV7B,MAAAA,qBAAqB,CAAC,iDAAD,CAArB,CADU,CAGV;;AACAF,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAhDD;;AAkDA,WAASgC,kBAAT,CAA4BD,CAA5B,EAA+B;AAC7B;AACAzC,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,iBAAL;AAAwB,OAAC0C,CAAC,CAACE,MAAF,CAASV,IAAV,GAAiBQ,CAAC,CAACE,MAAF,CAASC;AAAlD,KAAD,CAAhB;AACD;;AAED,WAASC,UAAT,CAAoBJ,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACK,cAAF;AACA,QAAIC,eAAe,GAAGN,CAAC,CAACE,MAAF,CAASK,QAAT,CAAkB,CAAlB,CAAtB;AACA,QAAIC,aAAa,GAAGR,CAAC,CAACE,MAAF,CAASK,QAAT,CAAkB,CAAlB,CAApB;;AACA,QAAID,eAAe,CAACH,KAAhB,IAAyBK,aAAa,CAACL,KAAd,KAAwB,EAArD,EAAyD;AACvD;AACAlC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,qBAAqB,CAAC,EAAD,CAArB,CAHuD,CAKvD;;AACA,YAAMsC,gBAAgB,GAAGX,MAAM,CAACY,MAAP,CAAcpD,iBAAd,EAAiCqD,IAAjC,CAAsC,GAAtC,CAAzB;AACA9C,MAAAA,wBAAwB,CAAC,EACvB,GAAGP,iBADoB;AAEvBQ,QAAAA,QAAQ,EAAE2C,gBAFa;AAGvB1C,QAAAA,IAAI,EAAEL;AAHiB,OAAD,CAAxB,CAPuD,CAavD;AACA;AACA;;AACA4C,MAAAA,eAAe,CAACM,KAAhB,CAAsBC,WAAtB,GAAoC,SAApC;AACAL,MAAAA,aAAa,CAACI,KAAd,CAAoBC,WAApB,GAAkC,SAAlC;AACD,KAlBD,MAkBO;AACLP,MAAAA,eAAe,CAACM,KAAhB,CAAsBC,WAAtB,GAAoC,KAApC;AACAL,MAAAA,aAAa,CAACI,KAAd,CAAoBC,WAApB,GAAkC,KAAlC;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAET,UAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,QAAQ,EAAEH;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAGE,KAAD,IAAWxC,kBAAkB,CAACwC,KAAD;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEjC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBACGE,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiB,EAD3B,EAEGJ,SAAS,CAAC8C,GAAV,CAAeC,IAAD,iBACb,QAAC,gBAAD;AAEE,QAAA,SAAS,EAAEA,IAAI,CAAC,CAAD,CAFjB;AAGE,QAAA,WAAW,EAAEA,IAAI,CAAC,CAAD;AAHnB,SACOA,IAAI,CAAC,CAAD,CADX;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAhJQ1D,I;;MAAAA,I;AAkJT,eAAeD,GAAf,C,CAEA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Nav from \"./nav\";\nimport Login from \"./login\";\nimport DisplayCrimeData from \"./displayData\";\nimport CityName from \"./cityName\";\nimport Options from \"./options\";\nimport Spinner from \"./loading.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  // const MAP_BOX_API =\n  //   \"pk.eyJ1IjoiMnBoZWxqNTYiLCJhIjoiY2trc2NyaGExMGMxeDJ3cGw3NjBqNng1NyJ9.ZJp17pLpWHvxtYSVLxARNg\";\n\n  // States\n  const [userInputLocation, setInputLocation] = useState({\n    street: \"\",\n    city: \"\",\n  });\n  const [userDefinedYear, setUserDefinedYear] = useState(\"2021\");\n  const [sendUserInputLocation, setSendUserInputLocation] = useState({\n    location: \"\",\n    year: \"\",\n  });\n  const [crimeData, setCrimeData] = useState([]);\n  const [streetNameFromData, setStreetNameFromData] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getAllData();\n  }, [sendUserInputLocation]);\n\n  const getAllData = async () => {\n    // Stop getAllData from running if nothing is in the search input\n    if (sendUserInputLocation.location === \"\") return;\n    console.log(sendUserInputLocation.location);\n\n    try {\n      // fetch location from user input\n      const locationResponse = await fetch(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${sendUserInputLocation.location}.json?limit=1&country=GB&access_token=${process.env.REACT_APP_MAP_BOX_API}`\n      );\n      const locationData = await locationResponse.json();\n      const location = locationData.features[0].center;\n\n      // fetch crime data, from latitude and longitude of MapBox API\n      const allCrimeData = [];\n      for (let i = 1; i < 12; i++) {\n        const crimeResponse = await fetch(\n          `https://data.police.uk/api/crimes-at-location?date=${sendUserInputLocation.year}-${i}&lat=${location[1]}&lng=${location[0]}`\n        );\n        // get crime data\n        const crimeData = await crimeResponse.json();\n        crimeData.forEach((obj) => {\n          allCrimeData.push(obj);\n        });\n        setLoading(true);\n      }\n\n      setStreetNameFromData(allCrimeData[0].location.street.name);\n\n      // reduce json into objects and their quantities (how many times they appear)\n      const crimeQuantity = allCrimeData.reduce((allCrimes, crime) => {\n        if (crime.category in allCrimes) {\n          allCrimes[crime.category]++;\n        } else {\n          allCrimes[crime.category] = 1;\n        }\n        return allCrimes;\n      }, {});\n\n      // return an array from object\n      setCrimeData(Object.entries(crimeQuantity));\n      setLoading(false);\n    } catch (e) {\n      setStreetNameFromData(\"Sorry, there is no information on this location\");\n\n      // return crimeData to nothing\n      setCrimeData([]);\n    }\n  };\n\n  function streetAndCityInput(e) {\n    // send data to string state\n    setInputLocation({ ...userInputLocation, [e.target.name]: e.target.value });\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    let userStreetInput = e.target.children[0];\n    let userCityInput = e.target.children[1];\n    if (userStreetInput.value && userCityInput.value !== \"\") {\n      // on submit, remove previous displayed crimes\n      setCrimeData([]);\n      setStreetNameFromData(\"\");\n\n      // user inupt values for location need to be in one string, for mapBox to find lat and long\n      const locationAsString = Object.values(userInputLocation).join(\" \");\n      setSendUserInputLocation({\n        ...userInputLocation,\n        location: locationAsString,\n        year: userDefinedYear,\n      });\n\n      // reset input\n      // userStreetInput.value = \"\";\n      // userCityInput.value = \"\";\n      userStreetInput.style.borderColor = \"inherit\";\n      userCityInput.style.borderColor = \"inherit\";\n    } else {\n      userStreetInput.style.borderColor = \"red\";\n      userCityInput.style.borderColor = \"red\";\n    }\n  }\n\n  return (\n    <div className=\"pages\">\n      <div className=\"home-container\">\n        <h1>The crime data app to help you feel safe.</h1>\n        <form onSubmit={submitForm}>\n          <input\n            type=\"text\"\n            placeholder=\"Street Name\"\n            name=\"street\"\n            onChange={streetAndCityInput}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"City / Town\"\n            name=\"city\"\n            onChange={streetAndCityInput}\n          />\n          <Options onChange={(value) => setUserDefinedYear(value)} />\n          <button>Find Crime Data</button>\n        </form>\n        <p className=\"form-info\">\n          Search by town, city or simply click the location icon to get\n          information on crime in your area. Data is collected from\n          ‘data.police.uk’.\n        </p>\n      </div>\n      <CityName name={streetNameFromData} />\n      <div className=\"crime-data-container\">\n        {loading ? <Spinner /> : \"\"}\n        {crimeData.map((data) => (\n          <DisplayCrimeData\n            key={data[0]}\n            crimeType={data[0]}\n            crimeNumber={data[1]}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// authors\n// <div>Icons made by <a href=\"http://fontawesome.io\" title=\"Dave Gandy\">Dave Gandy</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n"]},"metadata":{},"sourceType":"module"}